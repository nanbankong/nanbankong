/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: jetty/9.3.7.v20160115
 * Generated at: 2017-09-12 13:51:54 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.page;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class login_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("\t<meta http-equiv=\"Content-Type\" content=\"text/html\"; charset=\"utf-8\" >\r\n");
      out.write("\t<title>大猿ATM(atm.com)-综合性ATM机，全国统一价</title>\r\n");
      out.write("\t<link rel=\"stylesheet\" href=\"/css/reset.css\" type=\"text/css\">\r\n");
      out.write("\t<link rel=\"stylesheet\" href=\"/css/style.css\" type=\"text/css\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<div id=\"head\">\r\n");
      out.write("\t<div class=\"wrap\">\r\n");
      out.write("\t\t<div class=\"logo\">\r\n");
      out.write("\t\t\t<a href=\"#\"><img width=\"50px\" height=\"50px\" src=\"/images/dayuan.jpg\" alt=\"\"></a>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<h3>欢迎登录</h3>\r\n");
      out.write("\t</div>\r\n");
      out.write("</div>\r\n");
      out.write("<div class=\"login\">\r\n");
      out.write("\t<form id=\"loginForm\">\r\n");
      out.write("\t\t<ul class=\"login_box\">\r\n");
      out.write("\t\t\t<li class=\"login_text\">用户名</li>\r\n");
      out.write("\t\t\t<li><input type=\"text\" id=\"username\" name=\"username\" class=\"user_name\"></li>\r\n");
      out.write("\t\t\t<li class=\"login_text\">密码</li>\r\n");
      out.write("\t\t\t<li><input type=\"password\" id=\"password\" name=\"password\" class=\"user_password\"></li>\r\n");
      out.write("\t\t\t<li class=\"login_check\">\r\n");
      out.write("\t\t\t</li>\r\n");
      out.write("\t\t\t<li><input class=\"login_btn\" type=\"button\" value=\"登录\" onclick=\"login();\"></li>\r\n");
      out.write("\t\t\t<li class=\"co_account\">\r\n");
      out.write("\t\t\t</li>\r\n");
      out.write("\t\t</ul>\r\n");
      out.write("\t</form>\r\n");
      out.write("</div>\r\n");
      out.write("<div class=\"wrap register\">\r\n");
      out.write("\t<a href=\"/user/toRegist.do\" class=\"free_register\">免费注册&gt;&gt;</a></div>\r\n");
      out.write("<div id=\"footer\">\r\n");
      out.write("\t<p>客服热线：400-675-1234</p>\r\n");
      out.write("\t<p>Copyright © 2006 - 2017 备案编号：123456789123</p>\r\n");
      out.write("\t<div class=\"credit_rating\">\r\n");
      out.write("\t\t<a href=\"#\"><img src=\"/images/pj.jpg\" alt=\"信用评价\"></a>\r\n");
      out.write("\t\t<a href=\"#\"><img src=\"/images/pj.jpg\" alt=\"信用评价\"></a>\r\n");
      out.write("\t\t<a href=\"#\"><img src=\"/images/pj.jpg\" alt=\"信用评价\"></a>\r\n");
      out.write("\t\t<a href=\"#\"><img src=\"/images/pj.jpg\" alt=\"信用评价\"></a>\r\n");
      out.write("\t</div>\r\n");
      out.write("</div>\r\n");
      out.write("<script type=\"text/javascript\" src=\"/js/jquery-mini.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"/js/jquery-validate.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"/js/messages_zh.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\r\n");
      out.write("$(document).ready(function() {\r\n");
      out.write("\t$(\"#loginForm\").validate({\r\n");
      out.write("\t    rules: {\r\n");
      out.write("\t    \tusername: \"required\",\r\n");
      out.write("\t    \tpassword: {\r\n");
      out.write("\t\t        required: true,\r\n");
      out.write("\t\t        minlength: 1,\r\n");
      out.write("\t\t        maxlength: 6\r\n");
      out.write("\t\t      }\r\n");
      out.write("\t    },\r\n");
      out.write("\t    messages: {\r\n");
      out.write("\t    \tusername: \"请输入登录名\",\r\n");
      out.write("\t    \tpassword: {\r\n");
      out.write("\t    \t\trequired : \"请输入密码\",\r\n");
      out.write("\t    \t\tminlength : \"密码最小长度为1\",\r\n");
      out.write("\t    \t\tmaxlength : \"密码最大长度为6\"\r\n");
      out.write("\t    \t}\r\n");
      out.write("\t    }\r\n");
      out.write("\t});\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("function login() {\r\n");
      out.write("\t\r\n");
      out.write("\tif (!$(\"#loginForm\").valid()) {\r\n");
      out.write("\t\treturn false;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t$.ajax({\r\n");
      out.write("        url:'/user/login.do',\r\n");
      out.write("        type:'POST', //GET\r\n");
      out.write("        async:true,    //或false,是否异步\r\n");
      out.write("        data:{\r\n");
      out.write("        \tusername:$('#username').val(),\r\n");
      out.write("        \tpassword:$('#password').val()\r\n");
      out.write("        },\r\n");
      out.write("        timeout:5000,    //超时时间\r\n");
      out.write("        dataType:'json',    //返回的数据格式：json/xml/html/script/jsonp/text\r\n");
      out.write("        beforeSend:function(xhr){\r\n");
      out.write("            console.log(xhr)\r\n");
      out.write("            console.log('发送前')\r\n");
      out.write("        },\r\n");
      out.write("        success:function(data,textStatus,jqXHR){\r\n");
      out.write("            var obj = data;\r\n");
      out.write("            alert(obj.success);\r\n");
      out.write("            \r\n");
      out.write("            if (!data.success) {\r\n");
      out.write("            \talert(data.message);\r\n");
      out.write("            \treturn;\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            window.location.href='/';\r\n");
      out.write("            \r\n");
      out.write("        },\r\n");
      out.write("        error:function(xhr,textStatus){\r\n");
      out.write("            console.log('错误')\r\n");
      out.write("            console.log(xhr)\r\n");
      out.write("            console.log(textStatus)\r\n");
      out.write("        },\r\n");
      out.write("        complete:function(){\r\n");
      out.write("            console.log('结束')\r\n");
      out.write("        }\r\n");
      out.write("    });\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
